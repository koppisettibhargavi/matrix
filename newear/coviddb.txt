const express = require("express");
const path = require("path");

const { open } = require("sqlite");
const sqlite3 = require("sqlite3");

const app = express();
const dbPath = path.join(__dirname, "covid19India.db");
app.use(express.json());
let db = null;

const initializeDBAndServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    });
    app.listen(3009, () => {
      console.log("Server Running at http://localhost:3000/");
    });
  } catch (e) {
    console.log(`DB Error: ${e.message}`);
    process.exit(1);
  }
};
initializeDBAndServer();

const convertObj = (obj) => {
  return {
    stateId: obj.state_id,
    stateName: obj.state_name,
    population: obj.population,
  };
};

const convertObject = (obj) => {
  return {
    districtId: obj.district_id,
    districtName: obj.district_name,
    stateId: obj.state_id,
    cases: obj.cases,
    cured: obj.cured,
    active: obj.active,
    deaths: obj.deaths,
  };
};
// Get Books API
app.get("/states/", async (request, response) => {
  const getBooksQuery = `
    SELECT
      *
    FROM
      state;`;
  const booksArray = await db.all(getBooksQuery);
  response.send(booksArray.map((eachPlayer) => convertObj(eachPlayer)));
});
//get
app.get("/states/:stateId/", async (request, response) => {
  const { stateId } = request.params;
  const getBooksQuery = `
    SELECT
      *
    FROM
      state
    WHERE state_id=${stateId};`;
  const player = await db.get(getBooksQuery);
  response.send(convertObj(player));
});

//insert book api
app.post("/districts/", async (request, response) => {
  const { districtName, stateId, cases, cured, active, deaths } = request.body;
  const insertQuery = `
       INSERT INTO 
            district ( district_name,state_id,cases,cured,active,deaths)
       VALUES('${districtName}',${stateId},${cases},${cured},${active},${deaths});`;
  await db.run(insertQuery);
  response.send("District Successfully Added");
});
// get
app.get("/districts/:districtId/", async (request, response) => {
  const { districtId } = request.params;
  const getBooksQuery = `
    SELECT
      *
    FROM
      district
    WHERE district_id=${districtId};`;
  const player = await db.get(getBooksQuery);
  response.send(convertObject(player));
});
//delete
app.delete("/districts/:districtId/", async (request, response) => {
  const { districtId } = request.params;
  const getBooksQuery = `
    DELETE FROM
      district
    WHERE district_id=${districtId};`;
  const player = await db.run(getBooksQuery);
  response.send("District Removed");
});
//update
app.put("/districts/:districtId/", async (request, response) => {
  const { districtId } = request.params;
  const { districtName, stateId, cases, cured, active, deaths } = request.body;
  const updateQuery = `
      UPDATE district 
      SET
        district_name='${districtName}',
        state_id=${stateId},
        cases=${cases},
        cured=${cured},
        active=${active},
        deaths=${deaths}
      WHERE district_id=${districtId};`;
  await db.run(updateQuery);
  response.send("District Details Updated");
});

const convertState = (obj) => {
  return {
    totalCases: obj.totalCases,
    totalCured: obj.totalCured,
    totalActive: obj.totalActive,
    totalDeaths: obj.totalDeaths,
  };
};
//get
app.get("/states/:stateId/stats/", async (request, response) => {
  const { stateId } = request.params;
  const getBooksQuery = `
    SELECT
      sum(cases) as totalCases,
      sum(cured) as totalCured,
      sum(active) as totalActive,
      sum(deaths) as totalDeaths
    FROM
      district
    WHERE state_id=${stateId};`;
  const player = await db.get(getBooksQuery);
  response.send(convertState(player));
});

//get
app.get("/districts/:districtId/details/", async (request, response) => {
  const { districtId } = request.params;
  const getStateId = `
    SELECT 
       state_id
    FROM 
       district 
    WHERE district_id=${districtId};`;
  const stateId = await db.get(getStateId);
  const getBooksQuery = `
    SELECT
      state_name as stateName
    FROM
      state
    WHERE state_id=${stateId.state_id};`;
  const player = await db.get(getBooksQuery);
  response.send(player);
});
module.exports = app;

GET http://localhost:3009/states/

####
GET http://localhost:3009/states/1
###

POST http://localhost:3009/districts/
Content-Type: application/json

{
  "districtName": "Bagalkot",
  "stateId": 3,
  "cases": 2323,
  "cured": 2000,
  "active": 315,
  "deaths": 8
} 

### 
GET http://localhost:3009/districts/332/

####
DELETE http://localhost:3009/districts/:districtId/

###
PUT http://localhost:3009/districts/1
Content-Type: application/json

{
  "districtName": "Nadia",
  "stateId": 3,
  "cases": 9628,
  "cured": 6524,
  "active": 3000,
  "deaths": 104
}

###

GET http://localhost:3009/states/20/stats/ 
### 

GET http://localhost:3009/districts/332/details